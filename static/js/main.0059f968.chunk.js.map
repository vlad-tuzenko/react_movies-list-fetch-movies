{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/Movie.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","baseUrl","request","urlParam","a","fetch","response","ok","Error","status","statusText","json","getMovie","title","FindMovie","addMovie","useState","setTitle","setMovie","fetchMovie","foundMovie","console","error","onSubmit","event","preventDefault","Response","htmlFor","type","id","placeholder","value","onChange","target","classNames","onClick","App","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0059f968.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { Movie } from '../types';\n\nconst apiKey = '37c80b4a';\nconst baseUrl = `http://www.omdbapi.com/?apikey=${apiKey}&`;\n\nconst request = async <T>(urlParam: string): Promise<T> => {\n  const response = await fetch(`${baseUrl}${urlParam}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const getMovie = (title: Movie['Title']) => request<Movie>(`t=${title}`);\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie(movie:Movie): void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const fetchMovie = async () => {\n    try {\n      const foundMovie: Movie = await getMovie(title);\n\n      setMovie(foundMovie);\n    } catch (error) {\n      console.error(\n        'An error has occurred when requesting movie from the server',\n      );\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie?.Response === 'True') {\n      addMovie(movie);\n      setTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n              className={classNames('input', {\n                'is-danger': movie?.Response === 'False',\n              })}\n            />\n          </div>\n\n          {movie?.Response === 'False' && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={fetchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie?.Response === 'True'\n          ? <MovieCard movie={movie} />\n          : 'Please select other title'}\n\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}